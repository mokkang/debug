stages:
    - build
    - exec
    - security
    - open-source
    #- docker-build
    #- container-security

variables:
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
    IMAGE_TAG: $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA

    OUTPUT_FILE: ".m2/verademo/app/target/verademo.war"
    BASELINE_FILE: "pipeline_baseline.json"
    PROJECT_NAME: "Verademo_Gitlab"
    #UPDATE_BASELINE_COMMIT_MESSAGE: "Updating baseline on development branch from GitLab [skip ci]"
    REPOSITORY_NAME: "Verademo_Gitlab"

cache:
    key: "$CI_JOB_NAME"
    paths:
        - .m2/repository

maven-package:
    stage: build
    image: maven:3.8.3-openjdk-17
    script:
        - 'mvn $CI_BUILD_PATH clean package'
        - echo 'THIS IS WHERE ITS LOCATED'
        - 'pwd && ls -la'
    artifacts:
        name: ${CI_PROJECT_NAME}.war
        paths:
            - target/
    allow_failure: true
    after_script:
    - curl -sSL https://download.sourceclear.com/ci.sh | sh


#build-app: 
#<<: *run-for-all-calls
#    stage: build
#    artifacts:
#        paths:
#            - $OUTPUT_FILE
        #expire_in: 1 week
#    script: 
#        - 'mvn clean install $CI_BUILD_PATH app/'
#        - chmod +x $OUTPUT_FILE
#    allow_failure: true
pipeline-scan: 
    stage: security 
    dependencies: 
        - maven-package
    artifacts:
        name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_pipeline-scan-results
        paths:
            - results.json
        expire_in: 3 week
        when: always
    script:
        - curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
        - unzip pipeline-scan-LATEST.zip pipeline-scan.jar
        - java -jar pipeline-scan.jar --veracode_api_id "${VERACODE_API_ID}" --veracode_api_key "${VERACODE_API_KEY}" --file "build/libs/verademo.war" --gitlab_api_token "${PRIVATE_TOKEN} --baseline_file "${CI_BASELINE_PATH}" --project_name "${CI_PROJECT_PATH}" --project_url "${CI_REPOSITORY_URL}" --project_ref "${CI_COMMIT_REF_NAME}"


sast-policy-scan:
    stage: security
    image: veracode/api-wrapper-java:latest
    script:
        - java -jar /opt/veracode/api-wrapper.jar -vid $VERACODE_API_ID -vkey $VERACODE_API_KEY -action UploadAndScan -appname $CI_PROJECT_PATH_SLUG -filepath /builds/libs/verademo.war -createprofile true -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID" -sandboxname $CI_COMMIT_REF_NAME -createsandbox true
       # - java -jar /opt/veracode/api-wrapper.jar -vid '${VERACODE_API_ID}' -vkey '${VERACODE_API_KEY}' -action UploadAndScan -appname $CI_PROJECT_PATH_SLUG -filepath=target/verademo.war -createprofile true -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID" -sandboxname $CI_COMMIT_REF_NAME -createsandbox true
        #- java -jar /opt/veracode/api-wrapper.jar -vid '${VERACODE_API_ID}' -vkey '${VERACODE_API_KEY}' -action UploadAndScan -appname $CI_PROJECT_PATH_SLUG -filepath 'target/verademo.war' -createprofile true -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID" -sandboxname $CI_COMMIT_REF_NAME -createsandbox true
        
    allow_failure: true
#image: veracode/api-wrapper-java:latest
sca-scan:
    stage: open-source
    image: bpercyshelde/srcclr:latest
    script:
        - export SRCCLR_SCM_NAME=$CI_PROJECT_PATH
        - export SRCCLR_SCM_URI=$CI_PROJECT_URL
        - export SRCCLR_SCM_REF=$(if [ "$CI_COMMIT_TAG" == "" ]; then echo $CI_COMMIT_REF_NAME; else echo $CI_COMMIT_TAG; fi);
        - export SRCCLR_SCM_REF_TYPE=$(if [ "$CI_COMMIT_TAG" == "" ]; then echo "branch"; else echo "tag"; fi);
        - export SRCCLR_SCM_REV=$CI_COMMIT_SHA
        - curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor
    allow_failure: true
        
