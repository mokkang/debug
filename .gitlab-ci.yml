stages:
    - build
    - security
    - open-source
    #- docker-build
    #- container-security

variables:
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
    IMAGE_TAG: $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
    

cache:
    key: "$CI_JOB_NAME"
    paths:
        - .m2/repository

maven-package:
    stage: build
    image: maven:3.8.3-openjdk-17
    script:
        - 'mvn $CI_BUILD_PATH clean package'
    artifacts:
        paths:
            - target/
    allow_failure: true


sast-policy-scan:
    stage: security
    image: veracode/api-wrapper-java:latest
    script:
        - java -jar /opt/veracode/api-wrapper.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY}
          -action uploadandscan -appname $CI_PROJECT_PATH_SLUG -filepath $VERACODE_FILEPATH
          -createprofile true -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID"
          -sandboxname $CI_COMMIT_REF_NAME -createsandbox true
    allow_failure: true
#image: veracode/api-wrapper-java:latest
sca-scan:
    stage: open-source
    image: ubuntu:latest
    script:
        - export SRCCLR_SCM_NAME=$CI_PROJECT_PATH
        - export SRCCLR_SCM_URI=$CI_PROJECT_URL
        - export SRCCLR_SCM_REF=$(if [ "$CI_COMMIT_TAG" == "" ]; then echo $CI_COMMIT_REF_NAME; else echo $CI_COMMIT_TAG; fi);
        - export SRCCLR_SCM_REF_TYPE=$(if [ "$CI_COMMIT_TAG" == "" ]; then echo "branch"; else echo "tag"; fi);
        - export SRCCLR_SCM_REV=$CI_COMMIT_SHA
        - curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor
    allow_failure: true
        
